basePath: /admin
consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  EventMedia:
    description: Event sport response (default view)
    example:
      endDtTm: Necessitatibus quia.
      eventId: Officiis eos atque occaecati aut nisi.
      id: Soluta voluptas optio.
      locationId: Accusantium veritatis velit.
      name: Consequatur minima qui dolor similique.
      sportId: Velit aut aspernatur quos.
      startDtTm: Et est.
      subTitle: Ducimus consectetur sapiente sit.
      teamAdvanceMethod: Omnis voluptas dignissimos eum corrupti.
    properties:
      endDtTm:
        example: Necessitatibus quia.
        type: string
      eventId:
        description: Not guaranteed to be unique
        example: Officiis eos atque occaecati aut nisi.
        type: string
      id:
        description: ID
        example: Soluta voluptas optio.
        type: string
      locationId:
        description: Location.defaultLoc.id
        example: Accusantium veritatis velit.
        type: string
      name:
        description: e.g., March Madness
        example: Consequatur minima qui dolor similique.
        type: string
      sportId:
        description: Sport ID
        example: Velit aut aspernatur quos.
        type: string
      startDtTm:
        example: Et est.
        type: string
      subTitle:
        example: Ducimus consectetur sapiente sit.
        type: string
      teamAdvanceMethod:
        description: EventAdvanceMethod.singleElimination || doubleElim || bestOf
        example: Omnis voluptas dignissimos eum corrupti.
        type: string
    required:
    - id
    - sportId
    - eventId
    - name
    - subTitle
    - startDtTm
    - endDtTm
    - locationId
    - teamAdvanceMethod
    title: 'Mediatype identifier: application/nmgapi.evententity; view=default'
    type: object
  EventMediaCollection:
    description: EventMediaCollection is the media type for an array of EventMedia
      (default view)
    example:
    - endDtTm: Necessitatibus quia.
      eventId: Officiis eos atque occaecati aut nisi.
      id: Soluta voluptas optio.
      locationId: Accusantium veritatis velit.
      name: Consequatur minima qui dolor similique.
      sportId: Velit aut aspernatur quos.
      startDtTm: Et est.
      subTitle: Ducimus consectetur sapiente sit.
      teamAdvanceMethod: Omnis voluptas dignissimos eum corrupti.
    - endDtTm: Necessitatibus quia.
      eventId: Officiis eos atque occaecati aut nisi.
      id: Soluta voluptas optio.
      locationId: Accusantium veritatis velit.
      name: Consequatur minima qui dolor similique.
      sportId: Velit aut aspernatur quos.
      startDtTm: Et est.
      subTitle: Ducimus consectetur sapiente sit.
      teamAdvanceMethod: Omnis voluptas dignissimos eum corrupti.
    - endDtTm: Necessitatibus quia.
      eventId: Officiis eos atque occaecati aut nisi.
      id: Soluta voluptas optio.
      locationId: Accusantium veritatis velit.
      name: Consequatur minima qui dolor similique.
      sportId: Velit aut aspernatur quos.
      startDtTm: Et est.
      subTitle: Ducimus consectetur sapiente sit.
      teamAdvanceMethod: Omnis voluptas dignissimos eum corrupti.
    items:
      $ref: '#/definitions/EventMedia'
    title: 'Mediatype identifier: application/nmgapi.evententity; type=collection;
      view=default'
    type: array
  EventMediaTiny:
    description: Event sport response (tiny view)
    example:
      name: Consequatur minima qui dolor similique.
    properties:
      name:
        description: e.g., March Madness
        example: Consequatur minima qui dolor similique.
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/nmgapi.evententity; view=tiny'
    type: object
  EventPayload:
    description: Event Description.
    example:
      endDtTm: Dolor veritatis alias a repellat sed id.
      eventId: Atque saepe sed dolores est beatae minus.
      id: Esse nostrum laboriosam reprehenderit consequuntur reiciendis magnam.
      locationId: Ut cum.
      name: Laborum voluptatem.
      sportId: Sed quibusdam velit occaecati.
      startDtTm: Omnis debitis aut.
      subTitle: Dolores qui velit autem.
      teamAdvanceMethod: Laborum magni deleniti molestias numquam rerum unde.
    properties:
      endDtTm:
        example: Dolor veritatis alias a repellat sed id.
        type: string
      eventId:
        description: Not guaranteed to be unique
        example: Atque saepe sed dolores est beatae minus.
        type: string
      id:
        description: ID
        example: Esse nostrum laboriosam reprehenderit consequuntur reiciendis magnam.
        type: string
      locationId:
        description: Location.defaultLoc.id
        example: Ut cum.
        type: string
      name:
        description: e.g., March Madness
        example: Laborum voluptatem.
        type: string
      sportId:
        description: Sport ID
        example: Sed quibusdam velit occaecati.
        type: string
      startDtTm:
        example: Omnis debitis aut.
        type: string
      subTitle:
        example: Dolores qui velit autem.
        type: string
      teamAdvanceMethod:
        description: EventAdvanceMethod.singleElimination || doubleElim || bestOf
        example: Laborum magni deleniti molestias numquam rerum unde.
        type: string
    required:
    - sportId
    - eventId
    - name
    - subTitle
    - startDtTm
    - endDtTm
    - locationId
    - teamAdvanceMethod
    title: EventPayload
    type: object
  GameMedia:
    description: Game response (default view)
    example:
      eventId: Alias quos cupiditate qui.
      gamePlayStatus: Possimus saepe deserunt culpa et sed.
      id: Ipsum maiores dolorem labore harum eum.
      loserAdvanceState: Nisi adipisci sunt eum praesentium.
      sportId: Natus ut.
    properties:
      eventId:
        description: Event ID
        example: Alias quos cupiditate qui.
        type: string
      gamePlayStatus:
        description: TeamGamePlayStatus.preGame || tradeable || gameOn || ended
        example: Possimus saepe deserunt culpa et sed.
        type: string
      id:
        description: ID
        example: Ipsum maiores dolorem labore harum eum.
        type: string
      loserAdvanceState:
        description: TeamGameStatus.eliminated
        example: Nisi adipisci sunt eum praesentium.
        type: string
      sportId:
        description: Sport ID
        example: Natus ut.
        type: string
    required:
    - id
    - sportId
    - eventId
    - gamePlayStatus
    - loserAdvanceState
    title: 'Mediatype identifier: application/nmgapi.gameentity; view=default'
    type: object
  GameMediaCollection:
    description: GameMediaCollection is the media type for an array of GameMedia (default
      view)
    example:
    - eventId: Alias quos cupiditate qui.
      gamePlayStatus: Possimus saepe deserunt culpa et sed.
      id: Ipsum maiores dolorem labore harum eum.
      loserAdvanceState: Nisi adipisci sunt eum praesentium.
      sportId: Natus ut.
    - eventId: Alias quos cupiditate qui.
      gamePlayStatus: Possimus saepe deserunt culpa et sed.
      id: Ipsum maiores dolorem labore harum eum.
      loserAdvanceState: Nisi adipisci sunt eum praesentium.
      sportId: Natus ut.
    - eventId: Alias quos cupiditate qui.
      gamePlayStatus: Possimus saepe deserunt culpa et sed.
      id: Ipsum maiores dolorem labore harum eum.
      loserAdvanceState: Nisi adipisci sunt eum praesentium.
      sportId: Natus ut.
    items:
      $ref: '#/definitions/GameMedia'
    title: 'Mediatype identifier: application/nmgapi.gameentity; type=collection;
      view=default'
    type: array
  GameMediaTiny:
    description: Game response (tiny view)
    example:
      id: Ipsum maiores dolorem labore harum eum.
    properties:
      id:
        description: ID
        example: Ipsum maiores dolorem labore harum eum.
        type: string
    required:
    - id
    title: 'Mediatype identifier: application/nmgapi.gameentity; view=tiny'
    type: object
  GamePayload:
    description: Game Description.
    example:
      eventId: Qui laborum aliquam vel.
      gamePlayStatus: Maxime voluptatem dolores sit ut quis necessitatibus.
      id: Et est delectus illum quis aut.
      loserAdvanceState: Labore perferendis natus quidem.
      sportId: Sint maiores.
    properties:
      eventId:
        description: Event ID
        example: Qui laborum aliquam vel.
        type: string
      gamePlayStatus:
        description: TeamGamePlayStatus.preGame || tradeable || gameOn || ended
        example: Maxime voluptatem dolores sit ut quis necessitatibus.
        type: string
      id:
        description: ID
        example: Et est delectus illum quis aut.
        type: string
      loserAdvanceState:
        description: TeamGameStatus.eliminated
        example: Labore perferendis natus quidem.
        type: string
      sportId:
        description: Sport ID
        example: Sint maiores.
        type: string
    required:
    - sportId
    - eventId
    - gamePlayStatus
    - loserAdvanceState
    title: GamePayload
    type: object
  SportMedia:
    description: Sport response (default view)
    example:
      active: false
      eventTerm: Nemo qui accusantium qui enim.
      gameTerm: Officiis dolor autem nobis dolor.
      id: Cumque veritatis quos voluptatum.
      maxPreSplitPrice: 0.95571035
      name: Cupiditate ad consequuntur.
    properties:
      active:
        description: Is in season?
        example: false
        type: boolean
      eventTerm:
        description: Tournament
        example: Nemo qui accusantium qui enim.
        type: string
      gameTerm:
        description: Game
        example: Officiis dolor autem nobis dolor.
        type: string
      id:
        description: ID
        example: Cumque veritatis quos voluptatum.
        type: string
      maxPreSplitPrice:
        example: 0.95571035
        format: double
        type: number
      name:
        description: Sport name
        example: Cupiditate ad consequuntur.
        type: string
    required:
    - id
    - name
    - active
    - maxPreSplitPrice
    - gameTerm
    - eventTerm
    title: 'Mediatype identifier: application/nmgapi.sportentity; view=default'
    type: object
  SportMediaCollection:
    description: SportMediaCollection is the media type for an array of SportMedia
      (default view)
    example:
    - active: false
      eventTerm: Nemo qui accusantium qui enim.
      gameTerm: Officiis dolor autem nobis dolor.
      id: Cumque veritatis quos voluptatum.
      maxPreSplitPrice: 0.95571035
      name: Cupiditate ad consequuntur.
    items:
      $ref: '#/definitions/SportMedia'
    title: 'Mediatype identifier: application/nmgapi.sportentity; type=collection;
      view=default'
    type: array
  SportMediaTiny:
    description: Sport response (tiny view)
    example:
      name: Cupiditate ad consequuntur.
    properties:
      name:
        description: Sport name
        example: Cupiditate ad consequuntur.
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/nmgapi.sportentity; view=tiny'
    type: object
  SportPayload:
    description: Sport Description.
    example:
      active: true
      eventTerm: Ad earum quam porro vel quia.
      gameTerm: Maxime dicta mollitia et nulla eos.
      id: Id dignissimos quo iusto voluptatem eos est.
      maxPreSplitPrice: 0.5992919
      name: Nihil accusamus.
    properties:
      active:
        description: Is in season?
        example: true
        type: boolean
      eventTerm:
        description: Tournament
        example: Ad earum quam porro vel quia.
        type: string
      gameTerm:
        description: Game
        example: Maxime dicta mollitia et nulla eos.
        type: string
      id:
        description: ID
        example: Id dignissimos quo iusto voluptatem eos est.
        type: string
      maxPreSplitPrice:
        example: 0.5992919
        format: double
        type: number
      name:
        description: Sport name
        example: Nihil accusamus.
        type: string
    required:
    - name
    - active
    - maxPreSplitPrice
    - gameTerm
    - eventTerm
    title: SportPayload
    type: object
  TeamMedia:
    description: Team sport response (default view)
    example:
      currentWinRecord: Ducimus quia.
      homeTownId: Aut dolore quis natus aut magnam provident.
      id: Qui aut non.
      name: Sunt amet.
      shortName: Totam fuga fugiat cupiditate autem occaecati omnis.
      sportId: Alias delectus asperiores.
    properties:
      currentWinRecord:
        example: Ducimus quia.
        type: string
      homeTownId:
        description: Sport HomeTown ID
        example: Aut dolore quis natus aut magnam provident.
        type: string
      id:
        description: ID
        example: Qui aut non.
        type: string
      name:
        description: Team name
        example: Sunt amet.
        type: string
      shortName:
        description: Team Nickname
        example: Totam fuga fugiat cupiditate autem occaecati omnis.
        type: string
      sportId:
        description: Sport ID
        example: Alias delectus asperiores.
        type: string
    required:
    - id
    - name
    - sportId
    - homeTownId
    - shortName
    - currentWinRecord
    title: 'Mediatype identifier: application/nmgapi.teamentity; view=default'
    type: object
  TeamMediaCollection:
    description: TeamMediaCollection is the media type for an array of TeamMedia (default
      view)
    example:
    - currentWinRecord: Ducimus quia.
      homeTownId: Aut dolore quis natus aut magnam provident.
      id: Qui aut non.
      name: Sunt amet.
      shortName: Totam fuga fugiat cupiditate autem occaecati omnis.
      sportId: Alias delectus asperiores.
    - currentWinRecord: Ducimus quia.
      homeTownId: Aut dolore quis natus aut magnam provident.
      id: Qui aut non.
      name: Sunt amet.
      shortName: Totam fuga fugiat cupiditate autem occaecati omnis.
      sportId: Alias delectus asperiores.
    - currentWinRecord: Ducimus quia.
      homeTownId: Aut dolore quis natus aut magnam provident.
      id: Qui aut non.
      name: Sunt amet.
      shortName: Totam fuga fugiat cupiditate autem occaecati omnis.
      sportId: Alias delectus asperiores.
    items:
      $ref: '#/definitions/TeamMedia'
    title: 'Mediatype identifier: application/nmgapi.teamentity; type=collection;
      view=default'
    type: array
  TeamMediaTiny:
    description: Team sport response (tiny view)
    example:
      name: Sunt amet.
    properties:
      name:
        description: Team name
        example: Sunt amet.
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/nmgapi.teamentity; view=tiny'
    type: object
  TeamOpeningConfigMedia:
    description: Team sport response (default view)
    example:
      buyIncrementPrice: 0.40606162
      buyIncrementQuan: 2.0051724e+09
      id: Dolorum est dolor quis.
      liquidationFee: 0.9121386
      openingPrice: 0.1700355
      openingShares: 2.2614784e+08
      sellDecrementPrice: 0.121005505
      sellDecrementQuan: 5.2372032e+08
      startTradeDtTm: Officiis esse.
    properties:
      buyIncrementPrice:
        example: 0.40606162
        format: double
        type: number
      buyIncrementQuan:
        example: 2.0051724e+09
        format: int64
        type: integer
      id:
        description: ID
        example: Dolorum est dolor quis.
        type: string
      liquidationFee:
        example: 0.9121386
        format: double
        type: number
      openingPrice:
        example: 0.1700355
        format: double
        type: number
      openingShares:
        example: 2.2614784e+08
        format: int64
        type: integer
      sellDecrementPrice:
        example: 0.121005505
        format: double
        type: number
      sellDecrementQuan:
        example: 5.2372032e+08
        format: int64
        type: integer
      startTradeDtTm:
        example: Officiis esse.
        type: string
    required:
    - id
    - openingPrice
    - openingShares
    - buyIncrementQuan
    - buyIncrementPrice
    - sellDecrementQuan
    - sellDecrementPrice
    - liquidationFee
    - startTradeDtTm
    title: 'Mediatype identifier: application/nmgapi.teamopeningconfigentity; view=default'
    type: object
  TeamOpeningConfigMediaCollection:
    description: TeamOpeningConfigMediaCollection is the media type for an array of
      TeamOpeningConfigMedia (default view)
    example:
    - buyIncrementPrice: 0.40606162
      buyIncrementQuan: 2.0051724e+09
      id: Dolorum est dolor quis.
      liquidationFee: 0.9121386
      openingPrice: 0.1700355
      openingShares: 2.2614784e+08
      sellDecrementPrice: 0.121005505
      sellDecrementQuan: 5.2372032e+08
      startTradeDtTm: Officiis esse.
    - buyIncrementPrice: 0.40606162
      buyIncrementQuan: 2.0051724e+09
      id: Dolorum est dolor quis.
      liquidationFee: 0.9121386
      openingPrice: 0.1700355
      openingShares: 2.2614784e+08
      sellDecrementPrice: 0.121005505
      sellDecrementQuan: 5.2372032e+08
      startTradeDtTm: Officiis esse.
    - buyIncrementPrice: 0.40606162
      buyIncrementQuan: 2.0051724e+09
      id: Dolorum est dolor quis.
      liquidationFee: 0.9121386
      openingPrice: 0.1700355
      openingShares: 2.2614784e+08
      sellDecrementPrice: 0.121005505
      sellDecrementQuan: 5.2372032e+08
      startTradeDtTm: Officiis esse.
    items:
      $ref: '#/definitions/TeamOpeningConfigMedia'
    title: 'Mediatype identifier: application/nmgapi.teamopeningconfigentity; type=collection;
      view=default'
    type: array
  TeamOpeningConfigMediaTiny:
    description: Team sport response (tiny view)
    example:
      id: Dolorum est dolor quis.
    properties:
      id:
        description: ID
        example: Dolorum est dolor quis.
        type: string
    required:
    - id
    title: 'Mediatype identifier: application/nmgapi.teamopeningconfigentity; view=tiny'
    type: object
  TeamOpeningConfigPayload:
    description: Team Description.
    example:
      buyIncrementPrice: 0.34067774
      buyIncrementQuan: 2.4897974e+08
      id: Ut suscipit iusto eos et ut.
      liquidationFee: 0.5028185
      openingPrice: 0.20788437
      openingShares: 7.348311e+08
      sellDecrementPrice: 0.9983435
      sellDecrementQuan: 7.15603e+08
      startTradeDtTm: Id magni quidem ut ea.
    properties:
      buyIncrementPrice:
        example: 0.34067774
        format: double
        type: number
      buyIncrementQuan:
        example: 2.4897974e+08
        format: int64
        type: integer
      id:
        description: ID
        example: Ut suscipit iusto eos et ut.
        type: string
      liquidationFee:
        example: 0.5028185
        format: double
        type: number
      openingPrice:
        example: 0.20788437
        format: double
        type: number
      openingShares:
        example: 7.348311e+08
        format: int64
        type: integer
      sellDecrementPrice:
        example: 0.9983435
        format: double
        type: number
      sellDecrementQuan:
        example: 7.15603e+08
        format: int64
        type: integer
      startTradeDtTm:
        example: Id magni quidem ut ea.
        type: string
    required:
    - openingPrice
    - openingShares
    - buyIncrementQuan
    - buyIncrementPrice
    - sellDecrementQuan
    - sellDecrementPrice
    - liquidationFee
    - startTradeDtTm
    title: TeamOpeningConfigPayload
    type: object
  TeamPayload:
    description: Team Description.
    example:
      homeTownId: Perferendis eos vel assumenda non.
      id: Minima officiis quas voluptatem.
      name: Quos quaerat atque et est deleniti maiores.
      shortName: Eum neque quibusdam.
      sportId: Quos pariatur explicabo ullam quam sed accusantium.
    properties:
      homeTownId:
        description: Sport HomeTown ID
        example: Perferendis eos vel assumenda non.
        type: string
      id:
        description: ID
        example: Minima officiis quas voluptatem.
        type: string
      name:
        description: Team name
        example: Quos quaerat atque et est deleniti maiores.
        type: string
      shortName:
        description: Team Nickname
        example: Eum neque quibusdam.
        type: string
      sportId:
        description: Sport ID
        example: Quos pariatur explicabo ullam quam sed accusantium.
        type: string
    required:
    - name
    - sportId
    - homeTownId
    - shortName
    title: TeamPayload
    type: object
externalDocs:
  description: doc description
  url: http://google.com
host: localhost:8080
info:
  description: api for mobile & web clients
  license:
    name: Private (no license offered)
    url: http://google.com
  termsOfService: nmg tos
  title: New Millennium Games API
  version: ""
paths:
  /enum/:
    get:
      description: Get a map of all enums
      operationId: Enum#list
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: list Enum
      tags:
      - Enum
  /event/:
    post:
      description: Create a new sports event.
      operationId: Event#create
      parameters:
      - description: Event Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/EventPayload'
      produces:
      - application/nmgapi.evententity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventMediaTiny'
      schemes:
      - http
      summary: create Event
      tags:
      - Event
  /event/{id}:
    delete:
      description: Delete a sports event by id.
      operationId: Event#delete
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: delete Event
      tags:
      - Event
    get:
      description: Get a sports event by id.
      operationId: Event#show
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/nmgapi.evententity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventMedia'
      schemes:
      - http
      summary: show Event
      tags:
      - Event
    put:
      description: Update a sports event by id.
      operationId: Event#update
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: Event Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/EventPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: update Event
      tags:
      - Event
  /event/list:
    get:
      description: Get all events
      operationId: Event#list
      produces:
      - application/nmgapi.evententity; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventMediaCollection'
      schemes:
      - http
      summary: list Event
      tags:
      - Event
  /game/:
    post:
      description: Create a new game.
      operationId: Game#create
      parameters:
      - description: Game Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/GamePayload'
      produces:
      - application/nmgapi.gameentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GameMediaTiny'
      schemes:
      - http
      summary: create Game
      tags:
      - Game
  /game/{id}:
    delete:
      description: Delete a game by id.
      operationId: Game#delete
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: delete Game
      tags:
      - Game
    get:
      description: Get a game by id.
      operationId: Game#show
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/nmgapi.gameentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GameMedia'
      schemes:
      - http
      summary: show Game
      tags:
      - Game
    put:
      description: Update a game by id.
      operationId: Game#update
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      - description: Game Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/GamePayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: update Game
      tags:
      - Game
  /game/list:
    get:
      description: Get all games
      operationId: Game#list
      produces:
      - application/nmgapi.gameentity; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GameMediaCollection'
      schemes:
      - http
      summary: list Game
      tags:
      - Game
  /image/{entity}/{id}:
    post:
      description: Upload multiple images in multipart request
      operationId: Image#upload
      parameters:
      - description: event|sport|team
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: upload Image
      tags:
      - Image
  /sport/:
    post:
      description: Create a new sport.
      operationId: Sport#create
      parameters:
      - description: Sport Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SportPayload'
      produces:
      - application/nmgapi.sportentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SportMediaTiny'
      schemes:
      - http
      summary: create Sport
      tags:
      - Sport
  /sport/{id}:
    delete:
      description: Delete a sport by id.
      operationId: Sport#delete
      parameters:
      - description: Sport ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: delete Sport
      tags:
      - Sport
    get:
      description: Get a sport by id.
      operationId: Sport#show
      parameters:
      - description: Sport ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/nmgapi.sportentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SportMedia'
      schemes:
      - http
      summary: show Sport
      tags:
      - Sport
    put:
      description: Update a sport by id.
      operationId: Sport#update
      parameters:
      - description: Sport ID
        in: path
        name: id
        required: true
        type: string
      - description: Sport Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SportPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: update Sport
      tags:
      - Sport
  /sport/list:
    get:
      description: Get all sports
      operationId: Sport#list
      produces:
      - application/nmgapi.sportentity; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SportMediaCollection'
      schemes:
      - http
      summary: list Sport
      tags:
      - Sport
  /team/:
    post:
      description: Create a new sports team.
      operationId: Team#create
      parameters:
      - description: Team Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TeamPayload'
      produces:
      - application/nmgapi.teamentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMediaTiny'
      schemes:
      - http
      summary: create Team
      tags:
      - Team
  /team/{id}:
    delete:
      description: Delete a sports team by id.
      operationId: Team#delete
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: delete Team
      tags:
      - Team
    get:
      description: Get a sports team by id.
      operationId: Team#show
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/nmgapi.teamentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMedia'
      schemes:
      - http
      summary: show Team
      tags:
      - Team
    put:
      description: Update a sports team by id.
      operationId: Team#update
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      - description: Team Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TeamPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: update Team
      tags:
      - Team
  /team/list:
    get:
      description: Get all teams
      operationId: Team#list
      produces:
      - application/nmgapi.teamentity; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMediaCollection'
      schemes:
      - http
      summary: list Team
      tags:
      - Team
  /teamOpeningConfig/:
    post:
      description: Create a new team opening config.
      operationId: TeamOpeningConfig#create
      parameters:
      - description: Team Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TeamOpeningConfigPayload'
      produces:
      - application/nmgapi.teamopeningconfigentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamOpeningConfigMediaTiny'
      schemes:
      - http
      summary: create TeamOpeningConfig
      tags:
      - TeamOpeningConfig
  /teamOpeningConfig/{id}:
    delete:
      description: Delete a sports team by event key.
      operationId: TeamOpeningConfig#delete
      parameters:
      - description: Team Game Event Key
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: delete TeamOpeningConfig
      tags:
      - TeamOpeningConfig
    get:
      description: Get a sports team by event key.
      operationId: TeamOpeningConfig#show
      parameters:
      - description: Team Game Event Key
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/nmgapi.teamopeningconfigentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamOpeningConfigMedia'
      schemes:
      - http
      summary: show TeamOpeningConfig
      tags:
      - TeamOpeningConfig
    put:
      description: Update a sports team by event key.
      operationId: TeamOpeningConfig#update
      parameters:
      - description: Team Game Event Key
        in: path
        name: id
        required: true
        type: string
      - description: Team Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TeamOpeningConfigPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: update TeamOpeningConfig
      tags:
      - TeamOpeningConfig
  /teamOpeningConfig/list:
    get:
      description: Get all teams openings
      operationId: TeamOpeningConfig#list
      produces:
      - application/nmgapi.teamopeningconfigentity; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamOpeningConfigMediaCollection'
      schemes:
      - http
      summary: list TeamOpeningConfig
      tags:
      - TeamOpeningConfig
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NoContent:
    description: No Content
  OK:
    description: OK
schemes:
- http
swagger: "2.0"
