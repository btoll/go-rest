basePath: /nmg
consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  EventMedia:
    description: Event sport response (default view)
    example:
      endDtTm: 1981-04-15T17:25:09Z
      eventId: Quia dolorum officiis eos.
      locationId: Omnis soluta voluptas.
      name: Ut accusantium veritatis velit corporis consequatur minima.
      sportId: Dolor similique odit velit.
      startDtTm: 1993-09-14T18:24:18Z
      subTitle: Quos occaecati et est et.
      teamAdvanceMethod: Consectetur sapiente sit sit omnis.
    properties:
      endDtTm:
        example: 1981-04-15T17:25:09Z
        format: date-time
        type: string
      eventId:
        description: Not guaranteed to be unique
        example: Quia dolorum officiis eos.
        type: string
      locationId:
        description: Location.defaultLoc.id
        example: Omnis soluta voluptas.
        type: string
      name:
        description: e.g., March Madness
        example: Ut accusantium veritatis velit corporis consequatur minima.
        type: string
      sportId:
        description: Sport ID
        example: Dolor similique odit velit.
        type: string
      startDtTm:
        example: 1993-09-14T18:24:18Z
        format: date-time
        type: string
      subTitle:
        example: Quos occaecati et est et.
        type: string
      teamAdvanceMethod:
        description: EventAdvanceMethod.singleElimination || doubleElim || bestOf
        example: Consectetur sapiente sit sit omnis.
        type: string
    required:
    - sportId
    - eventId
    - name
    - subTitle
    - startDtTm
    - endDtTm
    - locationId
    - teamAdvanceMethod
    title: 'Mediatype identifier: application/nmgapi.evententity; view=default'
    type: object
  EventMediaTiny:
    description: Event sport response (tiny view)
    example:
      id: Occaecati aut.
    properties:
      id:
        description: ID
        example: Occaecati aut.
        type: string
    required:
    - id
    title: 'Mediatype identifier: application/nmgapi.evententity; view=tiny'
    type: object
  EventPayload:
    description: Event Description.
    example:
      endDtTm: 2001-01-15T17:07:05Z
      eventId: Voluptatem assumenda sed quibusdam velit occaecati excepturi.
      locationId: Debitis aut debitis.
      name: Qui velit.
      sportId: Suscipit laborum magni deleniti molestias.
      startDtTm: 1992-01-18T19:06:24Z
      subTitle: Unde ad qui laborum aliquam.
      teamAdvanceMethod: Nobis maxime voluptatem.
    properties:
      endDtTm:
        example: 2001-01-15T17:07:05Z
        format: date-time
        type: string
      eventId:
        description: Not guaranteed to be unique
        example: Voluptatem assumenda sed quibusdam velit occaecati excepturi.
        type: string
      locationId:
        description: Location.defaultLoc.id
        example: Debitis aut debitis.
        type: string
      name:
        description: e.g., March Madness
        example: Qui velit.
        type: string
      sportId:
        description: Sport ID
        example: Suscipit laborum magni deleniti molestias.
        type: string
      startDtTm:
        example: 1992-01-18T19:06:24Z
        format: date-time
        type: string
      subTitle:
        example: Unde ad qui laborum aliquam.
        type: string
      teamAdvanceMethod:
        description: EventAdvanceMethod.singleElimination || doubleElim || bestOf
        example: Nobis maxime voluptatem.
        type: string
    required:
    - sportId
    - eventId
    - name
    - subTitle
    - startDtTm
    - endDtTm
    - locationId
    - teamAdvanceMethod
    title: EventPayload
    type: object
  GameMedia:
    description: Game response (default view)
    example:
      externalId: Dignissimos eum.
      favTeamId: Iusto illum alias.
      finishedAtDtTm: 2011-03-15T19:41:00Z
      gameStatus: Qui dolore possimus saepe deserunt culpa.
      location: Harum eum cum nisi adipisci sunt eum.
      locationId: Nostrum natus.
      loserProgressStatus: Non recusandae molestias.
      oddsForFav: 0.67565155
      playDtTm: 1997-08-23T10:40:11Z
      sportId: Qui enim.
      title: Officiis dolor autem nobis dolor.
      underTeamId: Cumque veritatis quos voluptatum.
      winnerTeamId: Velit cupiditate ad consequuntur ut dolores ducimus.
    properties:
      externalId:
        description: Any public id for this game, not unique
        example: Dignissimos eum.
        type: string
      favTeamId:
        description: Favorite team id
        example: Iusto illum alias.
        type: string
      finishedAtDtTm:
        example: 2011-03-15T19:41:00Z
        format: date-time
        type: string
      gameStatus:
        description: TeamGameStatus.preGame || tradeable || gameOn || ended
        example: Qui dolore possimus saepe deserunt culpa.
        type: string
      location:
        description: Name of location
        example: Harum eum cum nisi adipisci sunt eum.
        type: string
      locationId:
        description: True GPS location
        example: Nostrum natus.
        type: string
      loserProgressStatus:
        description: TeamGameStatus.eliminated
        example: Non recusandae molestias.
        type: string
      oddsForFav:
        description: "0"
        example: 0.67565155
        format: double
        type: number
      playDtTm:
        example: 1997-08-23T10:40:11Z
        format: date-time
        type: string
      sportId:
        description: Sport ID
        example: Qui enim.
        type: string
      title:
        description: Public free form name
        example: Officiis dolor autem nobis dolor.
        type: string
      underTeamId:
        example: Cumque veritatis quos voluptatum.
        type: string
      winnerTeamId:
        description: Empty until game completed
        example: Velit cupiditate ad consequuntur ut dolores ducimus.
        type: string
    required:
    - favTeamId
    - underTeamId
    - winnerTeamId
    - sportId
    - playDtTm
    - externalId
    - title
    - locationId
    - location
    - oddsForFav
    - gameStatus
    - finishedAtDtTm
    - loserProgressStatus
    title: 'Mediatype identifier: application/nmgapi.gameentity; view=default'
    type: object
  GameMediaTiny:
    description: Game response (tiny view)
    example:
      id: Sed expedita ipsum maiores dolorem.
    properties:
      id:
        description: ID
        example: Sed expedita ipsum maiores dolorem.
        type: string
    required:
    - id
    title: 'Mediatype identifier: application/nmgapi.gameentity; view=tiny'
    type: object
  GamePayload:
    description: Game Description.
    example:
      eventId: Sit ut quis necessitatibus non.
      externalId: Est delectus.
      favTeamId: Quis aut ut labore perferendis natus quidem.
      finishedAtDtTm: 2007-08-16T16:19:15Z
      gameStatus: Maiores voluptatem voluptatem ad earum.
      location: Porro vel quia quaerat.
      locationId: Dicta mollitia et nulla eos nobis id.
      loserProgressStatus: Quo iusto voluptatem eos est quo molestias.
      oddsForFav: 0.30016002
      playDtTm: 1995-09-17T01:55:05Z
      sportId: Perferendis eos vel assumenda non.
      title: Minima officiis quas voluptatem.
      underTeamId: Quos quaerat atque et est deleniti maiores.
      winnerTeamId: Eum neque quibusdam.
    properties:
      eventId:
        description: Event ID
        example: Sit ut quis necessitatibus non.
        type: string
      externalId:
        description: Any public id for this game, not unique
        example: Est delectus.
        type: string
      favTeamId:
        description: Favorite team id
        example: Quis aut ut labore perferendis natus quidem.
        type: string
      finishedAtDtTm:
        example: 2007-08-16T16:19:15Z
        format: date-time
        type: string
      gameStatus:
        description: TeamGameStatus.preGame || tradeable || gameOn || ended
        example: Maiores voluptatem voluptatem ad earum.
        type: string
      location:
        description: Name of location
        example: Porro vel quia quaerat.
        type: string
      locationId:
        description: True GPS location
        example: Dicta mollitia et nulla eos nobis id.
        type: string
      loserProgressStatus:
        description: TeamGameStatus.eliminated
        example: Quo iusto voluptatem eos est quo molestias.
        type: string
      oddsForFav:
        description: "0"
        example: 0.30016002
        format: double
        type: number
      playDtTm:
        example: 1995-09-17T01:55:05Z
        format: date-time
        type: string
      sportId:
        description: Sport ID
        example: Perferendis eos vel assumenda non.
        type: string
      title:
        description: Public free form name
        example: Minima officiis quas voluptatem.
        type: string
      underTeamId:
        example: Quos quaerat atque et est deleniti maiores.
        type: string
      winnerTeamId:
        description: Empty until game completed
        example: Eum neque quibusdam.
        type: string
    required:
    - favTeamId
    - underTeamId
    - winnerTeamId
    - sportId
    - playDtTm
    - externalId
    - title
    - locationId
    - location
    - oddsForFav
    - gameStatus
    - finishedAtDtTm
    - loserProgressStatus
    title: GamePayload
    type: object
  SportMedia:
    description: Sport response (default view)
    example:
      active: true
      backgroundImageName: Aut dolore quis natus aut magnam provident.
      eventTerm: Qui aut non.
      gameTerm: Sunt amet.
      iconName: Totam fuga fugiat cupiditate autem occaecati omnis.
      maxPreSplitPrice: 0.010741719
      name: Autem quasi dolorum est dolor.
    properties:
      active:
        description: Is in season?
        example: true
        type: boolean
      backgroundImageName:
        description: sport_icon
        example: Aut dolore quis natus aut magnam provident.
        type: string
      eventTerm:
        description: Tournament
        example: Qui aut non.
        type: string
      gameTerm:
        description: Game
        example: Sunt amet.
        type: string
      iconName:
        description: sport_icon
        example: Totam fuga fugiat cupiditate autem occaecati omnis.
        type: string
      maxPreSplitPrice:
        example: 0.010741719
        format: double
        type: number
      name:
        description: Sport name
        example: Autem quasi dolorum est dolor.
        type: string
    required:
    - name
    - active
    - maxPreSplitPrice
    - gameTerm
    - eventTerm
    - iconName
    - backgroundImageName
    title: 'Mediatype identifier: application/nmgapi.sportentity; view=default'
    type: object
  SportMediaTiny:
    description: Sport response (tiny view)
    example:
      name: Autem quasi dolorum est dolor.
    properties:
      name:
        description: Sport name
        example: Autem quasi dolorum est dolor.
        type: string
    required:
    - name
    title: 'Mediatype identifier: application/nmgapi.sportentity; view=tiny'
    type: object
  SportPayload:
    description: Sport Description.
    example:
      active: true
      backgroundImageName: Pariatur explicabo ullam quam sed accusantium veritatis.
      eventTerm: Voluptas ut suscipit.
      gameTerm: Eos et.
      iconName: Aut est a tempora.
      maxPreSplitPrice: 0.80806947
      name: Id magni quidem ut ea.
    properties:
      active:
        description: Is in season?
        example: true
        type: boolean
      backgroundImageName:
        description: sport_icon
        example: Pariatur explicabo ullam quam sed accusantium veritatis.
        type: string
      eventTerm:
        description: Tournament
        example: Voluptas ut suscipit.
        type: string
      gameTerm:
        description: Game
        example: Eos et.
        type: string
      iconName:
        description: sport_icon
        example: Aut est a tempora.
        type: string
      maxPreSplitPrice:
        example: 0.80806947
        format: double
        type: number
      name:
        description: Sport name
        example: Id magni quidem ut ea.
        type: string
    required:
    - name
    - active
    - maxPreSplitPrice
    - gameTerm
    - eventTerm
    - iconName
    - backgroundImageName
    title: SportPayload
    type: object
  TeamMedia:
    description: Team sport response (default view)
    example:
      homeTownId: In cum atque consequatur.
      name: Veritatis alias a repellat.
      shortName: Id quidem atque saepe.
      sportId: Dolores est beatae.
    properties:
      homeTownId:
        description: Sport HomeTown ID
        example: In cum atque consequatur.
        type: string
      name:
        description: Team name
        example: Veritatis alias a repellat.
        type: string
      shortName:
        description: Team Nickname
        example: Id quidem atque saepe.
        type: string
      sportId:
        description: Sport ID
        example: Dolores est beatae.
        type: string
    required:
    - name
    - sportId
    - homeTownId
    - shortName
    title: 'Mediatype identifier: application/nmgapi.teamentity; view=default'
    type: object
  TeamMediaTiny:
    description: Team sport response (tiny view)
    example:
      id: Eaque officiis esse quia ut.
    properties:
      id:
        description: ID
        example: Eaque officiis esse quia ut.
        type: string
    required:
    - id
    title: 'Mediatype identifier: application/nmgapi.teamentity; view=tiny'
    type: object
  TeamOpeningConfigMedia:
    description: Team sport response (default view)
    example:
      buyIncrementPrice: 0.40268642
      buyIncrementQuan: 1.9122899e+09
      liquidationFee: 0.62480843
      openingPrice: 0.9175817
      openingShares: 6.410511e+08
      sellDecrementPrice: 0.069965616
      sellDecrementQuan: 1.03196026e+09
      startTradeDtTm: 2016-03-03T00:22:22Z
    properties:
      buyIncrementPrice:
        example: 0.40268642
        format: double
        type: number
      buyIncrementQuan:
        example: 1.9122899e+09
        format: int64
        type: integer
      liquidationFee:
        example: 0.62480843
        format: double
        type: number
      openingPrice:
        example: 0.9175817
        format: double
        type: number
      openingShares:
        example: 6.410511e+08
        format: int64
        type: integer
      sellDecrementPrice:
        example: 0.069965616
        format: double
        type: number
      sellDecrementQuan:
        example: 1.03196026e+09
        format: int64
        type: integer
      startTradeDtTm:
        example: 2016-03-03T00:22:22Z
        format: date-time
        type: string
    required:
    - openingPrice
    - openingShares
    - buyIncrementQuan
    - buyIncrementPrice
    - sellDecrementQuan
    - sellDecrementPrice
    - liquidationFee
    - startTradeDtTm
    title: 'Mediatype identifier: application/nmgapi.teamopeningconfigentity; view=default'
    type: object
  TeamOpeningConfigMediaTiny:
    description: Team sport response (tiny view)
    example:
      id: Nostrum laboriosam reprehenderit.
    properties:
      id:
        description: ID
        example: Nostrum laboriosam reprehenderit.
        type: string
    required:
    - id
    title: 'Mediatype identifier: application/nmgapi.teamopeningconfigentity; view=tiny'
    type: object
  TeamOpeningConfigPayload:
    description: Team Description.
    example:
      buyIncrementPrice: 0.8504026
      buyIncrementQuan: 2.191961e+08
      liquidationFee: 0.106112905
      openingPrice: 0.88860697
      openingShares: 1.6374965e+07
      sellDecrementPrice: 0.75585234
      sellDecrementQuan: 4.1032976e+08
      startTradeDtTm: 1981-09-01T12:08:40Z
    properties:
      buyIncrementPrice:
        example: 0.8504026
        format: double
        type: number
      buyIncrementQuan:
        example: 2.191961e+08
        format: int64
        type: integer
      liquidationFee:
        example: 0.106112905
        format: double
        type: number
      openingPrice:
        example: 0.88860697
        format: double
        type: number
      openingShares:
        example: 1.6374965e+07
        format: int64
        type: integer
      sellDecrementPrice:
        example: 0.75585234
        format: double
        type: number
      sellDecrementQuan:
        example: 4.1032976e+08
        format: int64
        type: integer
      startTradeDtTm:
        example: 1981-09-01T12:08:40Z
        format: date-time
        type: string
    required:
    - openingPrice
    - openingShares
    - buyIncrementQuan
    - buyIncrementPrice
    - sellDecrementQuan
    - sellDecrementPrice
    - liquidationFee
    - startTradeDtTm
    title: TeamOpeningConfigPayload
    type: object
  TeamPayload:
    description: Team Description.
    example:
      homeTownId: Excepturi minima voluptas.
      name: Ratione molestias aut.
      shortName: Vitae consequatur corrupti tempora.
      sportId: Est et veritatis non.
    properties:
      homeTownId:
        description: Sport HomeTown ID
        example: Excepturi minima voluptas.
        type: string
      name:
        description: Team name
        example: Ratione molestias aut.
        type: string
      shortName:
        description: Team Nickname
        example: Vitae consequatur corrupti tempora.
        type: string
      sportId:
        description: Sport ID
        example: Est et veritatis non.
        type: string
    required:
    - name
    - sportId
    - homeTownId
    - shortName
    title: TeamPayload
    type: object
externalDocs:
  description: doc description
  url: http://google.com
host: localhost:8080
info:
  description: api for mobile & web clients
  license:
    name: Private (no license offered)
    url: http://google.com
  termsOfService: nmg tos
  title: New Millennium Games API
  version: ""
paths:
  /enum/:
    get:
      description: Get a map of all enums
      operationId: Enum#list
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: list Enum
      tags:
      - Enum
  /event/:
    post:
      description: Create a new sports event.
      operationId: Event#create
      parameters:
      - description: Event Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/EventPayload'
      produces:
      - application/nmgapi.evententity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventMediaTiny'
      schemes:
      - http
      summary: create Event
      tags:
      - Event
  /event/{id}:
    delete:
      description: Delete a sports event by id.
      operationId: Event#delete
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: delete Event
      tags:
      - Event
    get:
      description: Get a sports event by id.
      operationId: Event#show
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/nmgapi.evententity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventMedia'
      schemes:
      - http
      summary: show Event
      tags:
      - Event
    put:
      description: Update a sports event by id.
      operationId: Event#update
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: string
      - description: Event Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/EventPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: update Event
      tags:
      - Event
  /event/list:
    get:
      description: Get all events
      operationId: Event#list
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: list Event
      tags:
      - Event
  /game/:
    post:
      description: Create a new game.
      operationId: Game#create
      parameters:
      - description: Game Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/GamePayload'
      produces:
      - application/nmgapi.gameentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GameMediaTiny'
      schemes:
      - http
      summary: create Game
      tags:
      - Game
  /game/{id}:
    delete:
      description: Delete a game by id.
      operationId: Game#delete
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: delete Game
      tags:
      - Game
    get:
      description: Get a game by id.
      operationId: Game#show
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/nmgapi.gameentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GameMedia'
      schemes:
      - http
      summary: show Game
      tags:
      - Game
    put:
      description: Update a game by id.
      operationId: Game#update
      parameters:
      - description: Game ID
        in: path
        name: id
        required: true
        type: string
      - description: Game Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/GamePayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: update Game
      tags:
      - Game
  /game/list:
    get:
      description: Get all games
      operationId: Game#list
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: list Game
      tags:
      - Game
  /image/{entity}/{id}:
    post:
      description: Upload multiple images in multipart request
      operationId: Image#upload
      parameters:
      - description: event|sport|team
        in: path
        name: entity
        required: true
        type: string
      - description: Entity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: upload Image
      tags:
      - Image
  /sport/:
    post:
      description: Create a new sport.
      operationId: Sport#create
      parameters:
      - description: Sport Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SportPayload'
      produces:
      - application/nmgapi.sportentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SportMediaTiny'
      schemes:
      - http
      summary: create Sport
      tags:
      - Sport
  /sport/{id}:
    delete:
      description: Delete a sport by id.
      operationId: Sport#delete
      parameters:
      - description: Sport ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: delete Sport
      tags:
      - Sport
    get:
      description: Get a sport by id.
      operationId: Sport#show
      parameters:
      - description: Sport ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/nmgapi.sportentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SportMedia'
      schemes:
      - http
      summary: show Sport
      tags:
      - Sport
    put:
      description: Update a sport by id.
      operationId: Sport#update
      parameters:
      - description: Sport ID
        in: path
        name: id
        required: true
        type: string
      - description: Sport Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SportPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: update Sport
      tags:
      - Sport
  /sport/list:
    get:
      description: Get all sports
      operationId: Sport#list
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: list Sport
      tags:
      - Sport
  /team/:
    post:
      description: Create a new sports team.
      operationId: Team#create
      parameters:
      - description: Team Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TeamPayload'
      produces:
      - application/nmgapi.teamentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMediaTiny'
      schemes:
      - http
      summary: create Team
      tags:
      - Team
  /team/{id}:
    delete:
      description: Delete a sports team by id.
      operationId: Team#delete
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: delete Team
      tags:
      - Team
    get:
      description: Get a sports team by id.
      operationId: Team#show
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/nmgapi.teamentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamMedia'
      schemes:
      - http
      summary: show Team
      tags:
      - Team
    put:
      description: Update a sports team by id.
      operationId: Team#update
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: string
      - description: Team Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TeamPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: update Team
      tags:
      - Team
  /team/list:
    get:
      description: Get all teams
      operationId: Team#list
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: list Team
      tags:
      - Team
  /teamOpeningConfig/:
    post:
      description: Create a new team opening config.
      operationId: TeamOpeningConfig#create
      parameters:
      - description: Team Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TeamOpeningConfigPayload'
      produces:
      - application/nmgapi.teamopeningconfigentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamOpeningConfigMediaTiny'
      schemes:
      - http
      summary: create TeamOpeningConfig
      tags:
      - TeamOpeningConfig
  /teamOpeningConfig/{id}:
    delete:
      description: Delete a sports team by event key.
      operationId: TeamOpeningConfig#delete
      parameters:
      - description: Team Game Event Key
        in: path
        name: id
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: delete TeamOpeningConfig
      tags:
      - TeamOpeningConfig
    get:
      description: Get a sports team by event key.
      operationId: TeamOpeningConfig#show
      parameters:
      - description: Team Game Event Key
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/nmgapi.teamopeningconfigentity
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/TeamOpeningConfigMedia'
      schemes:
      - http
      summary: show TeamOpeningConfig
      tags:
      - TeamOpeningConfig
    put:
      description: Update a sports team by event key.
      operationId: TeamOpeningConfig#update
      parameters:
      - description: Team Game Event Key
        in: path
        name: id
        required: true
        type: string
      - description: Team Description.
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TeamOpeningConfigPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "204":
          description: No Content
      schemes:
      - http
      summary: update TeamOpeningConfig
      tags:
      - TeamOpeningConfig
  /teamOpeningConfig/list:
    get:
      description: Get all teams openings
      operationId: TeamOpeningConfig#list
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: list TeamOpeningConfig
      tags:
      - TeamOpeningConfig
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NoContent:
    description: No Content
  OK:
    description: OK
schemes:
- http
swagger: "2.0"
